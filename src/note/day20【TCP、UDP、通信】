TCP通信程序：
    1. 两端通信时步骤：
        服务端程序，需要事先启动，等待客户端的连接。
        客户端主动连接服务器端，连接成功才能通信。服务端不可以主动连接客户端。
    2. Socket类
            1. 客户端  向服务端发出连接请求，服务端响应请求，两者建立连接开始通信。
            2. 构造方法  Socket(String host, int port) :创建套接字对象并将其连接到指定主机上的指定端口号。
                         如果指定的host是null ，则相当于指定地址为回送地址。
            3. 成员方法
                1、getInputStream() ： 返回此套接字的输入流。    关闭生成的InputStream也将关闭相关的Socket。
                2、getOutputStream() ： 返回此套接字的输出流。  关闭生成的getOutputStream也将关闭相关的Socket。
                3、shutdownOutput() ： 禁用此套接字的输出流。   任何先前写出的数据将被发送，随后终止输出流。
                4、close() ：关闭此套接字。一旦一个socket被关闭，它不可再使用。关闭此socket也将关闭相关的InputStream和OutputStream 。
    3. ServerSocket
            1. 服务端 相当于开启一个服务，并等待客户端的连接。
            2. 构造方法 public ServerSocket(int port) ：绑定到一个指定的端口号上，参数port就是端口号。
            3. 成员方法 accept() ：侦听并接受连接，返回一个新的Socket对象，用于和客户端实现通信。该方法会一直阻塞直到建立连接。
TCP网络程序
    1. 【服务端】启动,创建ServerSocket对象，等待连接。
    2. 【客户端】启动,创建Socket对象，请求连接。
    3. 【服务端】接收连接,调用accept方法，并返回一个Socket对象。
    4. 【客户端】Socket对象，获取OutputStream，向服务端写出数据。
    5. 【服务端】Scoket对象，获取InputStream，读取客户端发送的数据。   到此，客户端向服务端发送数据成功。
    6. 【服务端】Socket对象，获取OutputStream，向客户端回写数据。      自此，服务端向客户端回写数据。
    7. 【客户端】Scoket对象，获取InputStream，解析回写数据。
    8. 【客户端】释放资源，断开连接
文件上传
    1. 【客户端】输入流，从硬盘读取文件数据到程序中。
    2. 【客户端】输出流，写出文件数据到服务端。
    3. 【服务端】输入流，读取文件数据到服务端程序。
    4. 【服务端】输出流，写出文件数据到服务器硬盘中。
信息回写
    前四步与基本文件上传一致
    5. 【服务端】获取输出流，回写数据。
    6. 【客户端】获取输入流，解析回写数据。